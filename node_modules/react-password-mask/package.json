{
  "_args": [
    [
      {
        "raw": "react-password-mask",
        "scope": null,
        "escapedName": "react-password-mask",
        "name": "react-password-mask",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/TimHui/code/roots-studio-app"
    ]
  ],
  "_from": "react-password-mask@latest",
  "_id": "react-password-mask@3.1.2",
  "_inCache": true,
  "_location": "/react-password-mask",
  "_nodeVersion": "8.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-password-mask-3.1.2.tgz_1510687890549_0.09541270695626736"
  },
  "_npmUser": {
    "name": "zakangelle",
    "email": "zaknotzak@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-password-mask",
    "scope": null,
    "escapedName": "react-password-mask",
    "name": "react-password-mask",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-password-mask/-/react-password-mask-3.1.2.tgz",
  "_shasum": "7f4f65675c2374c6ba5afe26bbd4d1a53b94d648",
  "_shrinkwrap": null,
  "_spec": "react-password-mask",
  "_where": "/Users/TimHui/code/roots-studio-app",
  "author": {
    "name": "Zak Angelle"
  },
  "bugs": {
    "url": "https://github.com/zakangelle/react-password-mask/issues"
  },
  "dependencies": {},
  "description": "Show/hide the contents of a password field.",
  "devDependencies": {
    "babel-cli": "^6.16.0",
    "babel-eslint": "^6.1.2",
    "babel-loader": "^6.2.5",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-preset-es2015": "^6.22.0",
    "babel-preset-react": "^6.22.0",
    "babel-preset-stage-0": "^6.5.0",
    "coveralls": "^2.11.14",
    "cross-env": "^3.1.3",
    "css-loader": "^0.25.0",
    "enzyme": "^2.4.1",
    "eslint": "^1.10.3",
    "eslint-config-airbnb": "^5.0.1",
    "eslint-loader": "^1.5.0",
    "eslint-plugin-react": "^3.16.1",
    "extract-text-webpack-plugin": "^2.0.0",
    "html-webpack-plugin": "^2.28.0",
    "jest": "^19.0.2",
    "prop-types": "^15.3.2",
    "react": "^15.3.2",
    "react-addons-test-utils": "^15.4.2",
    "react-dom": "^15.3.2",
    "react-test-renderer": "^15.4.2",
    "sinon": "^1.17.6",
    "style-loader": "^0.13.1",
    "webpack": "^2.2.1",
    "webpack-dev-server": "^2.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-co/2CxvN8QQKQ51hNyASZekoCqX9BGx46Vhz+ZbeVP5VbRhskD33NVZeC7VTJPf8JZL2qshQEQAq6Ag3zlEdnQ==",
    "shasum": "7f4f65675c2374c6ba5afe26bbd4d1a53b94d648",
    "tarball": "https://registry.npmjs.org/react-password-mask/-/react-password-mask-3.1.2.tgz"
  },
  "gitHead": "7c7c9082741000e289e2fcde149f10dad214f235",
  "homepage": "https://github.com/zakangelle/react-password-mask#readme",
  "jest": {
    "testRegex": "(/test/.*|(\\.|/))\\.js?$",
    "moduleFileExtensions": [
      "js",
      "json"
    ],
    "collectCoverage": true,
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "lcov"
    ]
  },
  "keywords": [
    "react",
    "component",
    "show",
    "hide",
    "reveal",
    "password",
    "input",
    "field",
    "mask"
  ],
  "license": "MIT",
  "main": "lib/passwordMask.min.js",
  "maintainers": [
    {
      "name": "zakangelle",
      "email": "zaknotzak@gmail.com"
    }
  ],
  "name": "react-password-mask",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.6 || 15.x.x",
    "prop-types": "^15.3.2"
  },
  "readme": "# React Password Mask\n\nShow/hide the contents of a password field.\n\n[![Circle CI](https://circleci.com/gh/zakangelle/react-password-mask/tree/master.svg?style=shield)](https://circleci.com/gh/zakangelle/react-password-mask/tree/master) [![Coverage Status](https://img.shields.io/coveralls/zakangelle/react-password-mask.svg)](https://coveralls.io/github/zakangelle/react-password-mask?branch=master) [![See Demo](https://img.shields.io/badge/see-demo-4842f4.svg)](https://zakang.name/react-password-mask/)\n\n\n<a href=\"https://zakang.name/react-password-mask/\">\n  <img src=\"https://www.dropbox.com/s/rop6okglcobb8tw/react-password-mask.gif?raw=1\" width=\"350px\" />\n</a>\n\n## Installation\n\n```sh\n$ npm install react-password-mask\n```\n\n## Usage\n\n```js\nimport PasswordMask from 'react-password-mask';\n```\n\n```js\n<PasswordMask\n  id=\"password\"\n  name=\"password\"\n  placeholder=\"Enter password\"\n  value={this.state.password}\n  onChange={this.handleChange.bind(this)}\n/>\n```\n\n### Unstyled Example\n\nUse `useVendorStyles={false}` to disable the default CSS styles from the package. You can then style the component from scratch using `inputStyles`/`buttonStyles` or `inputClassName`/`buttonClassName`.\n\n```js\n<PasswordMask\n  id=\"password\"\n  name=\"password\"\n  value={this.state.password}\n  onChange={this.handleChange.bind(this)}\n  useVendorStyles={false}\n/>\n```\n\n## Options\n\n| Option        | Type      | Description                                                   |\n|---------------|-----------|---------------------------------------------------------------|\n| `value`       | any       | The value of the password field.                              |\n| `id`          | string    | The HTML `id` attribute used for the password field.          |\n| `name`        | string    | The HTML `name` attribute used for the password field.        |\n| `className`   | string    | A space-separated list of HTML `class` attributes applied to the container.            |\n| `inputClassName`   | string    | A space-separated list of HTML `class` attributes, applied to the password field.            |\n| `buttonClassName`   | string    | A space-separated list of HTML `class` attributes, applied to the show/hide button.            |\n| `placeholder` | string    | The HTML `placeholder` attribute used for the password field. |\n| `autoFocus` | boolean    | The HTML `autofocus` attribute used for the password field. |\n| `maxLength` | number    | The HTML `maxlength` attribute used for the password field. |\n| `onChange`    | function  | A callback function to be invoked when the `value` of the field changes. Receives an argument containing the React `SyntheticEvent` object. |\n| `onKeyDown`   | function  | A callback function to be invoked when a key is pressed inside the input field. Receives an argument containing the React `SyntheticEvent` object. |\n| `onShow`      | function  | A callback function to be invoked when the `value` of the field is shown. Receives an argument containing the current value of the field. |\n| `onHide`      | function  | A callback function to be invoked when the `value` of the field is masked. Receives an argument containing the current value of the field. |\n| `onToggle`    | function  | A callback function to be invoked when the `value` of the field is shown or masked. Receives an argument containing the current value of the field. |\n| `inputStyles` | object | Inline CSS styles to be applied to the password field.            |\n| `buttonStyles`| object | Inline CSS styles to be applied to the show/hide button.          |\n| `useVendorStyles`| boolean | Whether the vendor styles of this package should be applied at all. Default: `true`          |\n| `showButtonContent` | element, string | The HTML content of the show button. |\n| `hideButtonContent` | element, string | The HTML content of the hide button. |\n\n## Development\n\nInstall dependencies:\n\n```\n$ npm install\n```\n\nRun the example app at [http://localhost:8080](http://localhost:8080):\n\n```\n$ npm run example\n```\n\nRun tests using [jest](https://github.com/facebook/jest):\n\n```\n$ npm test\n```\n\nUpdate test snapshots:\n\n```\n$ npm run test:update\n```\n\nRun tests and watch for code changes:\n\n```\n$ npm run test:watch\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zakangelle/react-password-mask.git"
  },
  "scripts": {
    "build": "webpack",
    "coverage": "cat ./coverage/lcov.info | coveralls",
    "example": "webpack-dev-server --config example/webpack.config.js",
    "example:build": "cross-env NODE_ENV=production webpack --config example/webpack.config.build.js",
    "lint": "eslint src test",
    "preversion": "npm run build && git add -A lib",
    "test": "jest",
    "test:update": "jest -u",
    "test:watch": "npm test -- --watchAll"
  },
  "version": "3.1.2"
}
